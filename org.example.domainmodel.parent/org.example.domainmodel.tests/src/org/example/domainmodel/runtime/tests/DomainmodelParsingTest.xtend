/*
 * generated by Xtext 2.25.0-SNAPSHOT
 */
package org.example.domainmodel.runtime.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.example.domainmodel.domainmodel.Domainmodel
import org.example.domainmodel.tests.DomainmodelInjectorProvider
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith

@RunWith(XtextRunner)
@InjectWith(DomainmodelInjectorProvider)
class DomainmodelParsingTest {
	@Inject
	ParseHelper<Domainmodel> parseHelper

	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			datatype String

			entity Blog {
				title: String
				many posts: Post
			}

			entity HasAuthor {
				author: String
			}

			entity Post extends HasAuthor {
				title: String
				content: String
				many comments: Comment
			}

			entity Comment extends HasAuthor {
				content: String
			}
		''')
		Assert.assertNotNull(result)
		val errors = result.eResource.errors
		Assert.assertTrue('''Unexpected errors: «errors.join(", ")»''', errors.isEmpty)
	}
}
